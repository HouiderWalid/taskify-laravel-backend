pipeline{
    agent any
    stages {
        stage('Test') {
            steps {
                sh 'docker build -t taskify-laravel-backend-test -f docker/local/php/Dockerfile .'
                sh 'docker run -d --name taskify-laravel-backend-test-1 taskify-laravel-backend-test:latest'
                sh 'docker exec -i -e COMPOSER_ALLOW_SUPERUSER=1 taskify-laravel-backend-test-1 sh -c "rm -rf vendor composer.lock && composer clear-cache --no-interaction && composer install --no-interaction"'
                sh 'docker exec -i taskify-laravel-backend-test-1 chown -R www-data:www-data /var/www/html'
                sh 'docker exec -i taskify-laravel-backend-test-1 php artisan optimize'
                sh 'docker exec -i taskify-laravel-backend-test-1 php artisan test'
            }
            post {
                always {
                    sh 'docker stop taskify-laravel-backend-test-1'
                    sh 'docker rm taskify-laravel-backend-test-1'
                    sh 'docker rmi taskify-laravel-backend-test:latest'
                }
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([file(credentialsId: 'taskify-laravel-backend-env-file', variable: 'ENV_FILE')]) {
                    sh 'cp $ENV_FILE .env'
                }
                sh 'docker-compose -f docker/local/docker-compose.yml --env-file .env up -d --build'
            }
        }
    }
}